Calculating eSports for Engineers Score

eSports for Engineers v. 4.0

Your overall score is the average of the most recent scores for each
of the 6 days, MON through SAT.  Scores that are more than 7 days old
are not included in the calculation.  If you enter your individual day
scores in the launcher (run ./launcher.py in the base
esports-for-engineers-v40 directory) it will calculate the overall
score for you.

Each day has a different theme - abstract strategy games for MON, WED
and FRI, historical racing and flight sims for the other days.  There
is no requirement to work on, e.g., a MON task only on Monday.  Your
most recent result (within the last 7 days) for MON is what counts for
your overall score, whether you obtained the score on a Monday or not.

Your score for an individual day is between zero and 1.  This score
comes from completing one task, and as many additional projects as you
want.  For each project point you obtain, add 0.2 to your daily score,
up to a maximum daily score of 1.

Each day there are three levels of tasks (Bronze, Silver and Gold)
from which to choose.  Bronze tasks are the easiest, but have maximum
score of 0.5.  For Silver the maximum possible is 0.75.  For Gold, the
maximum possible is 1, and your score is included in your overall
score for 30 days.  (You need to re-enter your Gold score each week in
launcher.py to have it included after 7 days).

All games should be set to maximum playing strength unless otherwise
noted.  (Thus for MON the wBridge5 level should be set to 5).  In the
sims, realism settings should be set to 100% realism, except that in
THU/battleOfBritain.sh ground collisions can be set to off.)


Scoring example:

The player selects the Bronze task for MON, and after playing Contract
Bridge with the Duplicate Bridge hands as described in
MON/calculatingScore.txt received a total score of -8 International
Match Points (IMP).  The score for MON is then (-8+18)/20*.5=0.250 per
the formula in MON/calculatingScore.txt.

The player then selects the Silver Historical Sim Racing task for TUE.
The player obtains a laptime of 1 minute 15 seconds, while the
reference laptime for that track is 1 minute 6 seconds, thus the TUE
score is (1-3*9/66)*.75=0.443 per the formula in
TUE/calculatingScore.txt

Since the player hasn’t attempted any WED – SAT tasks yet, these
scores are 0.  Thus the player’s overall score at this point is
(0.25+0.443)/6=0.116


In order to record a score for a particular day using launcher.py, you
must put one or more supporting files in the afterGameReport
directory.

Remember to record your game when playing a sim.  For TUE, remember to
save the replay after your game.  For THU, turn on the gun camera
after entering the 3D view, then save the replay after you exit this
view.  For SAT, type "F" after entering the 3D view to record film.
In the flight sims, toggle the camera off during uneventful parts of
the flight or edit these parts out afterwards on the replay screen.

Remember to save your game if playing Bridge, Chess or Weiqi.

You can also write your comments about your game experience to a text
file, then save this file to the afterGameReport directory.

Screenshots of game results and .txt files written by the user are
also useful additions to the afterGameReport directories.  Saving game
output is needed so you can compare scores and experiences with others
playing esports-for-engineers.

Example: you play the MON game (Contract Bridge), then save the game
as a .pbn file.  You copy this file to MON/afterGameReport, along with
a screenshot .png of your game and the Dup (closed room) game showing
your IMP score, with two screenshots per game so you can see all 13
tricks for each game.  You play several more games, following the same
procedure each time.  You also add screenshots from the bcalc bridge
analyzer and a text file commentary on your games to the
MON/afterGameReport directory.

Then you calculate your MON score and enter it in launcher.py.  When
it saves your MON score, launcher.py automatically moves all the files
in MON/afterGameReport into its own filesForLauncher directory.  You
can export all your scores and associated files from launcher.py and
send the exported file to others.

Which files you put in each afterGameReport directory is up to you.  A
simple text file describing your game is sufficient, but it is
recommended to save the following game output files in the
afterGameReport directory:

MON: .pbn files showing deal, bidding and tricks.

TUE: .rpy files, which are stored in TUE/WP/drive_c/Sierra/GPL/replay

WED: .pgn file containing chess game vs. nibbler along with commentary
generated by scid/stockfish

THU: .cam replay file, stored in
THU/BattleOfBritain/WP/drive_c/Program Files (x86)/Rowan
Software/Battle Of Britain/VIDEOS

FRI: .sfg file, if playing against KaTrain, saved game files are in
FRI/WP/drive_c/KaTrain/sgfout.  Screenshot .png files showing
./goreviewpartner.sh ./sabaki.sh or ./q5go.sh analysis are also
useful.

SAT: Briefing.txt, debrief.txt and .vhs files, where the text files
are placed in the SAT directory by ./getBriefingDebriefing.sh and
in-game .vhs recording files saved by the user are in
SAT/WP/drive_c/FreeFalcon6/acmibin, or, if using the BMS upgrade
versions, SAT/BMS43x/WP/drive_c/Falcon BMS 4.3x/User/Acmi, where x=2,
3 or 5 depending on the BMS version you download.

